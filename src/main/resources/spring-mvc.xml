<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    
	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->
	<!--引入配置属性文件 -->
	<context:property-placeholder location="classpath:conf/config-develop.properties" />
	<context:component-scan base-package="net.chetong.order.controller.*" />
	<aop:aspectj-autoproxy proxy-target-class="true"/>
		
	<!-- 可以 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<ref bean="mappingJacksonHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
		<property name="objectMapper" ref="objectMappingConverter" ></property>
	</bean>
	
	<bean id="objectMappingConverter" class="net.chetong.order.common.interceptor.ObjectMappingConverter"></bean>

<!-- 	启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
<!-- 	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
<!-- 		<property name="messageConverters"> -->
<!-- 			<list> -->
<!-- 				json转换器 -->
<!-- 				<ref bean="mappingJacksonHttpMessageConverter" /> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->

	<!-- 视图解释类   返回以形式：prefix + view name + suffix-->  
	   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
	   		<property name="prefix" value="/" />    
		    <property name="suffix" value=".jsp"/>
		    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> 
		    <property name="order" value="0" /> 
	   </bean>  

  		<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
        <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
           <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
           <property name="maxUploadSize" value="10000000"/>  
       </bean>  
         
       <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
       <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
       <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
         <property name="exceptionMappings">  
               <props>  
                  <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到error_fileupload.jsp页面 -->  
                   <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>  
               </props>  
          </property>  
       </bean>

</beans>