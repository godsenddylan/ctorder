<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sqlmap_hy_voice" >
  <resultMap id="BaseResultMap" type="net.chetong.order.model.HyVoiceVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="case_no" property="caseNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="show_time" property="showTime" jdbcType="TIMESTAMP" />
    <result column="upload_time" property="uploadTime" jdbcType="TIMESTAMP" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="voice_length" property="voiceLength" jdbcType="TIME" />
    <result column="file_size" property="fileSize" jdbcType="BIGINT" />
    <result column="file_link" property="fileLink" jdbcType="VARCHAR" />
    <result column="is_listened" property="isListened" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, case_no, user_id, record_time, show_time, upload_time, filename, voice_length, 
    file_size, file_link, is_listened, created_by, create_time, updated_by, update_time
  </sql>
  <sql id="Query_Column_List">
  	id, order_no, case_no, user_id,DATE_FORMAT(record_time,'%Y-%m-%d %T') AS record_time, DATE_FORMAT(show_time,'%Y-%m-%d') AS show_time,DATE_FORMAT(upload_time,'%Y-%m-%d %T') AS upload_time, filename, voice_length, 
    file_size, file_link, is_listened, created_by,DATE_FORMAT(create_time,'%Y-%m-%d %T') AS create_time, updated_by,DATE_FORMAT(update_time,'%Y-%m-%d %T') AS update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hy_voice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hy_voice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="net.chetong.order.model.HyVoiceVO" >
    insert into hy_voice (id, order_no, case_no, 
      user_id, record_time, show_time, 
      upload_time, filename, voice_length, 
      file_size, file_link, is_listened, 
      created_by, create_time, updated_by, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{caseNo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{recordTime,jdbcType=TIMESTAMP}, #{showTime,jdbcType=TIMESTAMP}, 
      #{uploadTime,jdbcType=TIMESTAMP}, #{filename,jdbcType=VARCHAR}, #{voiceLength,jdbcType=TIME}, 
      #{fileSize,jdbcType=BIGINT}, #{fileLink,jdbcType=VARCHAR}, #{isListened,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="net.chetong.order.model.HyVoiceVO" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into hy_voice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="caseNo != null" >
        case_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
      <if test="showTime != null" >
        show_time,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="voiceLength != null" >
        voice_length,
      </if>
      <if test="fileSize != null" >
        file_size,
      </if>
      <if test="fileLink != null" >
        file_link,
      </if>
      <if test="isListened != null" >
        is_listened,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null" >
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="showTime != null" >
        #{showTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="voiceLength != null" >
        #{voiceLength,jdbcType=TIME},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileLink != null" >
        #{fileLink,jdbcType=VARCHAR},
      </if>
      <if test="isListened != null" >
        #{isListened,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.chetong.order.model.HyVoiceVO" >
    update hy_voice
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null" >
        case_no = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="showTime != null" >
        show_time = #{showTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="voiceLength != null" >
        voice_length = #{voiceLength,jdbcType=TIME},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileLink != null" >
        file_link = #{fileLink,jdbcType=VARCHAR},
      </if>
      <if test="isListened != null" >
        is_listened = #{isListened,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.chetong.order.model.HyVoiceVO" >
    update hy_voice
    set order_no = #{orderNo,jdbcType=VARCHAR},
      case_no = #{caseNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      show_time = #{showTime,jdbcType=TIMESTAMP},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      filename = #{filename,jdbcType=VARCHAR},
      voice_length = #{voiceLength,jdbcType=TIME},
      file_size = #{fileSize,jdbcType=BIGINT},
      file_link = #{fileLink,jdbcType=VARCHAR},
      is_listened = #{isListened,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <delete id="delHyVoiceById" parameterType="java.lang.Long">
  	delete from hy_voice
  	where id = #{id}
  </delete>
  
  <select id="queryHyVoiceList" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select
  		<include refid="Query_Column_List"></include>
  		from hy_voice
  		<where>
  			<if test="id != null">
  				and id = #{id}
  			</if>
  			<if test="orderNo != null">
  				and order_no = #{orderNo}
  			</if>
  			<if test="caseNo != null">
  				and case_no = #{caseNo}
  			</if>
  			<if test="userId != null">
  				and user_id = #{userId}
  			</if>
  		</where>
  		
  </select>
</mapper>